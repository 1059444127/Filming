//////////////////////////////////////////////////////////////////////////
/// \defgroup McsfDatabase of Common Software Business Unit
///  Copyright, (c) Shanghai United Imaging Healthcare Inc., 2011
///  All rights reserved.
///
///  \author  ZHOU qiangqiang  qiangqiang.zhou@united-imaging.com
///
///  \file       mcsf_dicomdatabase_spfiletable.h
///  \brief   This file was generated by CodeGenerater.exe 
///              which translates database script into classes supported by ODB
///
///  \version 1.0
///  \date    11/14/2011
///  \{
//////////////////////////////////////////////////////////////////////////

#ifndef MCSF_DICOMDATABASE_SPFILETABLE_H
#define MCSF_DICOMDATABASE_SPFILETABLE_H
#include <string>
#include <odb/core.hxx>

#include <boost/date_time/gregorian/gregorian_types.hpp>// for posix_time::ptime --DATETIME
#include <boost/date_time/posix_time/posix_time_types.hpp>

#pragma db object
class SPfileTable
{
public:
    typedef boost::posix_time::ptime DATETIME_BOOST;
    typedef boost::posix_time::time_duration TIME_BOOST;
    typedef boost::gregorian::date DATE_BOOST;
SPfileTable (
const int& SP_FileID,
const int& JobID,
const std::string& SP_FilePath,
const DATE_BOOST& CreateDate,
const TIME_BOOST& CreateTime
):
m_SP_FileID(SP_FileID),
m_JobID(JobID),
m_SP_FilePath(SP_FilePath),
m_CreateDate(CreateDate),
m_CreateTime(CreateTime)
{
}

const int& GetSP_FileID () const 
{
	return m_SP_FileID;
}
void SetSP_FileID (const int& SP_FileID)
{
	m_SP_FileID = SP_FileID;
}

const int& GetJobID () const 
{
	return m_JobID;
}
void SetJobID (const int& JobID)
{
	m_JobID = JobID;
}

const std::string& GetSP_FilePath () const 
{
	return m_SP_FilePath;
}
void SetSP_FilePath (const std::string& SP_FilePath)
{
	m_SP_FilePath = SP_FilePath;
}

const DATE_BOOST& GetCreateDate () const 
{
	return m_CreateDate;
}
void SetCreateDate (const DATE_BOOST& CreateDate)
{
	m_CreateDate = CreateDate;
}

const TIME_BOOST& GetCreateTime () const 
{
	return m_CreateTime;
}
void SetCreateTime (const TIME_BOOST& CreateTime)
{
	m_CreateTime = CreateTime;
}

private:
friend class odb::access;

SPfileTable () {}

//5 parameters


#pragma db id type("int not null")
int m_SP_FileID;
//comment

#pragma db type("int not null")
int m_JobID;
//comment

#pragma db type("varchar(256)")
std::string m_SP_FilePath;
//comment

#pragma db type("date")
DATE_BOOST m_CreateDate;
//comment

#pragma db type("time")
TIME_BOOST m_CreateTime;
//comment
};

#endif // MCSF_DICOMDATABASE_SPFILETABLE_H
