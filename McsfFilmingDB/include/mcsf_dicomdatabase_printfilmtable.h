//////////////////////////////////////////////////////////////////////////
/// \defgroup McsfDatabase of Common Software Business Unit
///  Copyright, (c) Shanghai United Imaging Healthcare Inc., 2011
///  All rights reserved.
///
///  \author  ZHOU qiangqiang  qiangqiang.zhou@united-imaging.com
///
///  \file       mcsf_dicomdatabase_printfilmtable.h
///  \brief   This file was generated by CodeGenerater.exe 
///              which translates database script into classes supported by ODB
///
///  \version 1.0
///  \date    11/14/2011
///  \{
//////////////////////////////////////////////////////////////////////////

#ifndef MCSF_DICOMDATABASE_PRINTFILMTABLE_H
#define MCSF_DICOMDATABASE_PRINTFILMTABLE_H
#include <string>
#include <odb/core.hxx>

#include <boost/date_time/gregorian/gregorian_types.hpp>// for posix_time::ptime --DATETIME
#include <boost/date_time/posix_time/posix_time_types.hpp>

#pragma db object
class PrintFilmTable
{
public:
    typedef boost::posix_time::ptime DATETIME_BOOST;
    typedef boost::posix_time::time_duration TIME_BOOST;
    typedef boost::gregorian::date DATE_BOOST;
PrintFilmTable (
const int& JobID,
const int& FilmID,
const int& FilmAmount,
const std::string& Layout,
const std::string& FilmSize,
const DATE_BOOST& CreateDate,
const TIME_BOOST& CreateTime,
const int& HavePrinted
):
m_JobID(JobID),
m_FilmID(FilmID),
m_FilmAmount(FilmAmount),
m_Layout(Layout),
m_FilmSize(FilmSize),
m_CreateDate(CreateDate),
m_CreateTime(CreateTime),
m_HavePrinted(HavePrinted)
{
}

const int& GetJobID () const 
{
	return m_JobID;
}
void SetJobID (const int& JobID)
{
	m_JobID = JobID;
}

const int& GetFilmID () const 
{
	return m_FilmID;
}
void SetFilmID (const int& FilmID)
{
	m_FilmID = FilmID;
}

const int& GetFilmAmount () const 
{
	return m_FilmAmount;
}
void SetFilmAmount (const int& FilmAmount)
{
	m_FilmAmount = FilmAmount;
}

const std::string& GetLayout () const 
{
	return m_Layout;
}
void SetLayout (const std::string& Layout)
{
	m_Layout = Layout;
}

const std::string& GetFilmSize () const 
{
	return m_FilmSize;
}
void SetFilmSize (const std::string& FilmSize)
{
	m_FilmSize = FilmSize;
}

const DATE_BOOST& GetCreateDate () const 
{
	return m_CreateDate;
}
void SetCreateDate (const DATE_BOOST& CreateDate)
{
	m_CreateDate = CreateDate;
}

const TIME_BOOST& GetCreateTime () const 
{
	return m_CreateTime;
}
void SetCreateTime (const TIME_BOOST& CreateTime)
{
	m_CreateTime = CreateTime;
}

const int& GetHavePrinted () const 
{
	return m_HavePrinted;
}
void SetHavePrinted (const int& HavePrinted)
{
	m_HavePrinted = HavePrinted;
}

private:
friend class odb::access;

PrintFilmTable () {}

//8 parameters


#pragma db id type("int not null")
int m_JobID;
//Job ID

#pragma db type("int not null")
int m_FilmID;
//Film ID

#pragma db type("int")
int m_FilmAmount;
//total of film number

#pragma db type("varchar(32) ")
std::string m_Layout;
//display format

#pragma db type("varchar(16) ")
std::string m_FilmSize;
//film size

#pragma db type("date")
DATE_BOOST m_CreateDate;
//comment

#pragma db type("time")
TIME_BOOST m_CreateTime;
//comment

#pragma db type("int")
int m_HavePrinted;
//mark this film have been printed
};

#endif // MCSF_DICOMDATABASE_PRINTFILMTABLE_H
